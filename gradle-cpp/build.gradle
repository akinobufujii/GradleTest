// プラグイン
apply plugin: 'cpp'
apply plugin: 'groovy'

task zipApp(type: Zip, dependsOn: jar) {
    // zip ファイル名の変更
    archiveName = "testArchive.zip"

    // zip化するディレクトリ
    from 'build/binaries'
}

// 成果物を生むタスク(buildコマンドで実行)
artifacts {
    archives zipApp
}

// 実行ファイル（Main）側設定
model
{
	components
	{
		main(NativeExecutableSpec)
		{
			binaries.all {
                // マクロ定義
                cppCompiler.define "NDEBUG"
                
                // 使用するツールチェイン
                if(toolChain in Gcc)
                {
                    cppCompiler.args "-fno-access-control", "-fconserve-space"
                }
            }
		}
	}
}

binaries.withType(NativeExecutableBinary) { binary ->
    def linkTask = binary.tasks.link
    def stripTask = task("strip${binary.name.capitalize()}") {
        dependsOn linkTask
        doFirst {
            if (binary.toolChain in Gcc) {
                ["strip", linkTask.outputFile].execute()
            }
        }
    }
    binary.builtBy stripTask
}
